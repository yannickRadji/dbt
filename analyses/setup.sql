-- dblink (et postgres_fdw) n'est pas activé pour des raisons de sécurité sur le cloud donc tous sera fait à partir de la national_db
DROP SCHEMA IF EXISTS region1_raw CASCADE;
CREATE SCHEMA region1_raw;
DROP SCHEMA IF EXISTS region2_raw CASCADE;
CREATE SCHEMA region2_raw;
DROP SCHEMA IF EXISTS convergence CASCADE;
CREATE SCHEMA convergence;
DROP SCHEMA IF EXISTS audit CASCADE;
CREATE SCHEMA audit;
DROP SCHEMA IF EXISTS snapshot CASCADE;

CREATE TABLE IF NOT EXISTS audit.logs (
    log_id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    event VARCHAR(255) NOT NULL,
    timestamp TIMESTAMP NOT NULL,
    new_rows INTEGER  -- This can be left null in pre-hook inserts
);

-- Création de la table des patients
CREATE TABLE region1_raw.patients (
    patient_id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    first_name VARCHAR(50),
    last_name VARCHAR(50),
    birth_date DATE,
    start_date DATE -- La date à laquelle le patient commence à être suivi dans cette région
);

-- Création de la table des analyses (analyses de groupe sanguin)
CREATE TABLE region1_raw.analyses (
    analysis_id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    patient_id INT REFERENCES region1_raw.patients(patient_id),
    analysis_date DATE,
    blood_group VARCHAR(10), -- Par exemple : O+, etc.
    status VARCHAR(20) -- Statut : 'validé', 'en attente', 'rejeté'
);

-- Création de la table des délivrances de poches de sang
CREATE TABLE region1_raw.delivrances (
    delivrance_id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    patient_id INT REFERENCES region1_raw.patients(patient_id),
    delivrance_date DATE,
    blood_type VARCHAR(10), -- Type de sang administré : O+, A-, etc.
    volume_ml INT -- Volume administré en ml
);

-- Insertion des patients pour la région 1
INSERT INTO region1_raw.patients (first_name, last_name, birth_date, start_date)
VALUES
    ('Alice', 'Dupont', '1985-01-15', '2020-01-01'),
    ('Bob', 'Martin', '1992-06-20', '2018-05-12'),
    ('Claire', 'Legrand', '1978-12-05', '2015-09-23'),
    ('David', 'Pires', '1990-10-25', '2022-06-15'),
    ('Eva', 'Joly', '1983-03-09', '2021-02-17'),
    ('Marc', 'Lemoine', '1996-02-22', '2023-02-01'),
    ('Sophie', 'Blanc', '1979-11-30', '2019-07-19'),
    ('Pierre', 'Dupuis', '1981-07-14', '2021-12-15'),
    ('Lucas', 'Chauveau', '1995-01-17', '2021-04-25'),
    ('Sarah', 'Boucher', '1984-05-10', '2020-08-04');

-- Insertion des analyses pour la région 1 avec la nomenclature standard des groupes sanguins
INSERT INTO region1_raw.analyses (patient_id, analysis_date, blood_group, status)
VALUES
    (1, '2023-01-15', 'O+', 'validé'),
    (2, '2023-05-10', 'A-', 'en attente'),
    (3, '2023-11-11', 'O+', 'validé'),
    (4, '2023-06-20', 'O+', 'rejeté'),
    (5, '2023-03-05', 'AB-', 'validé'),
    (6, '2023-08-15', 'B+', 'en attente'),
    (7, '2023-07-25', 'A+', 'validé'),
    (8, '2023-10-22', 'O-', 'rejeté'),
    (9, '2023-05-30', 'B-', 'validé'),
    (10, '2023-04-17', 'AB+', 'validé');

-- Insertion des délivrances pour la région 1 (nomenclature O+, A-, etc.)
INSERT INTO region1_raw.delivrances (patient_id, delivrance_date, blood_type, volume_ml)
VALUES
    (1, '2023-05-12', 'O+', 450),
    (2, '2023-06-25', 'A-', 500),
    (3, '2023-07-15', 'O+', 400),
    (4, '2023-07-20', 'O+', 475),
    (5, '2023-10-03', 'AB-', 500),
    (6, '2023-08-20', 'B+', 450),
    (7, '2023-09-11', 'A+', 475),
    (8, '2023-11-01', 'O-', 500),
    (9, '2023-07-18', 'B-', 475),
    (10, '2023-12-01', 'AB+', 400);

-- Création de la table des patients
CREATE TABLE region2_raw.patients (
    patient_id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    first_name VARCHAR(50),
    last_name VARCHAR(50),
    birth_date DATE,
    region VARCHAR(50),
    start_date DATE -- La date à laquelle le patient commence à être suivi dans cette région
);

-- Création de la table des analyses (analyses de groupe sanguin)
CREATE TABLE region2_raw.analyses (
    analysis_id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    patient_id INT REFERENCES region2_raw.patients(patient_id),
    analysis_date DATE,
    blood_group VARCHAR(10), -- Par exemple : Oplus, etc. /!\
    status VARCHAR(20) -- Statut : 'validé', 'en attente', 'rejeté'
);

-- Création de la table des délivrances de poches de sang
CREATE TABLE region2_raw.delivrances (
    delivrance_id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    patient_id INT REFERENCES region2_raw.patients(patient_id),
    delivrance_date DATE,
    blood_type VARCHAR(10), -- Type de sang administré : Aminus, etc. /!\
    volume_L FLOAT -- Volume administré en Litre donc données à modifié et type différent  /!\
);

-- Lucas Chauveau  est présent dans les deux régions : il déménage de Région 1 (inscription le 2021-04-25) vers Région 2 (2023-01-01)

-- Insertion des patients pour la région 2
INSERT INTO region2_raw.patients (first_name, last_name, birth_date, start_date)
VALUES
    ('John', 'Smith', '1990-02-18', '2022-11-01'),
    ('Maya', 'Durand', '1987-07-24', '2021-06-15'),
    ('Tom', 'Mercier', '1980-10-03', '2021-03-22'),
    ('Laura', 'Vidal', '1993-08-11', '2022-08-11'),
    ('Lucas', 'Chauveau', '1995-01-17', '2023-01-01'),
    ('Julien', 'Leclerc', '1994-12-30', '2021-11-04'),
    ('Clara', 'Dumont', '1995-04-09', '2021-09-17'),
    ('Mark', 'Gauthier', '1988-03-03', '2022-04-20'),
    ('Sarah', 'Boucher', '1984-05-10', '2022-12-11'),
    ('Vincent', 'Faure', '1989-09-10', '2023-02-19');

-- Insertion des analyses pour la région 2 avec nomenclature différente (Oplus, Aminus, etc.)
INSERT INTO region2_raw.analyses (patient_id, analysis_date, blood_group, status)
VALUES
    (1, '2023-11-06', 'Oplus', 'validé'),
    (2, '2023-08-14', 'Aminus', 'validé'),
    (3, '2023-04-10', 'Oplus', 'rejeté'),
    (4, '2023-07-07', 'Aplus', 'validé'),
    (5, '2023-09-15', 'ABplus', 'en attente'),
    (6, '2023-11-15', 'Oplus', 'validé'),
    (7, '2023-06-25', 'Aplus', 'validé'),
    (8, '2023-10-01', 'Bplus', 'rejeté'),
    (9, '2023-11-10', 'Bminus', 'validé'),
    (10, '2023-10-01', 'ABplus', 'validé');

-- Insertion des délivrances pour la région 2 (nomenclature différente : Oplus, Aminus, etc.)
-- Volumes de sang convertis en Litres (1 L = 1000 mL)
INSERT INTO region2_raw.delivrances (patient_id, delivrance_date, blood_type, volume_L)
VALUES
    (1, '2023-06-11', 'Oplus', 0.45),
    (2, '2023-09-12', 'Aminus', 0.50),
    (3, '2023-10-23', 'Oplus', 0.40),
    (4, '2023-09-04', 'Aplus', 0.475),
    (5, '2023-11-11', 'ABplus', 0.50),
    (6, '2023-09-13', 'Oplus', 0.45),
    (7, '2023-07-10', 'Aplus', 0.475),
    (8, '2023-12-18', 'Bplus', 0.50),
    (9, '2023-07-28', 'Bminus', 0.475),
    (10, '2023-10-20', 'ABplus', 0.40);

CREATE TABLE convergence.mapping_blood_types (
    source_value VARCHAR(10) PRIMARY KEY,
    standardized_value VARCHAR(10) NOT NULL
);

-- table de pour que les métiers puisse mettre leur valeurs de transcodage
INSERT INTO convergence.mapping_blood_types (source_value, standardized_value)
VALUES
    ('Oplus', 'O+'),
    ('Aplus', 'A+'),
    ('Bplus', 'B+'),
    ('ABplus', 'AB+'),
    ('Ominus', 'O-'),
    ('Aminus', 'A-'),
    ('Bminus', 'B-'),
    ('ABminus', 'AB-');
